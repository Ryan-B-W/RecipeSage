version: '3.7'

# NOTE: If you're selfhosting, you'll find it much easier (and more performant) to use the proper selfhosted
# dockerfile that exists here: https://github.com/julianpoy/recipesage-selfhost

services:
  proxy:
    image: nginx
    volumes:
    - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    - ./nginx/ssl.crt:/tmp/ssl.crt
    - ./nginx/ssl.key:/tmp/ssl.key
    ports:
    - "80:80"
    - "443:443"
    command: nginx -g 'daemon off;'
    depends_on:
      - webapp
      - express
      - pushpin
  webapp:
    ports:
      - "8100:8100"
    build:
      context: .
      dockerfile: ./Frontend/Dockerfile
    volumes:
      - ./SharedUtils/src:/app/SharedUtils/src
      - ./SharedUtils/package.json:/app/SharedUtils/package.json
      - ./SharedUtils/package-lock.json:/app/SharedUtils/package-lock.json
      - ./Frontend/src:/app/Frontend/src
      - ./Frontend/package.json:/app/Frontend/package.json
      - ./Frontend/package-lock.json:/app/Frontend/package-lock.json
  express:
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - elasticsearch
      - pushpin
      - browserless
    build:
      context: .
      dockerfile: ./Backend/Dockerfile
    command: npx nodemon --watch ../SharedUtils --watch . src/bin/www
    environment:
      - AWS_REGION=us-west-2
      - AWS_BUCKET=chefbook-dev
      - AWS_PUBLIC_ASSET_LOCATION=https://chefbook-dev.s3.us-west-2.amazonaws.com/
      - NODE_ENV=development
      - VERBOSE=false
      - VERSION=development
      - POSTGRES_DB=recipesage_dev
      - POSTGRES_USER=recipesage_dev
      - POSTGRES_PASSWORD=recipesage_dev
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=postgres
      - POSTGRES_SSL=false
      - POSTGRES_LOGGING=true
      - GCM_KEYPAIR
      - SENTRY_DSN
      - GRIP_URL=http://pushpin:5561/
      - GRIP_KEY=changeme
      - ELASTIC_ENABLE=true
      - ELASTIC_IDX_PREFIX=rs_dev_
      - ELASTIC_CONN=http://elastic:recipesage_dev@elasticsearch:9200
      - ELASTIC_PASSWORD=recipesage_dev
      - BROWSERLESS_HOST=browserless
      - BROWSERLESS_PORT=3000
      - GRAYLOG_HOST=graylog
      - GRAYLOG_PORT=12201
      - INGREDIENT_INSTRUCTION_CLASSIFIER_URL=http://ingredient-instruction-classifier:3000/
    env_file:
      - Backend/.env
    volumes:
      - ./SharedUtils/src:/app/SharedUtils/src
      - ./SharedUtils/package.json:/app/SharedUtils/package.json
      - ./SharedUtils/package-lock.json:/app/SharedUtils/package-lock.json
      - ./Backend/src:/app/Backend/src
      - ./Backend/package.json:/app/Backend/package.json
      - ./Backend/package-lock.json:/app/Backend/package-lock.json
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=recipesage_dev
    ports:
      - 9200:9200
  pushpin:
    image: fanout/pushpin:1.27.0
    environment:
      - target=express:3000
    ports:
      - "7999:7999"
      - "5560-5563:5560-5563"
  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=recipesage_dev
      - POSTGRES_USER=recipesage_dev
      - POSTGRES_PASSWORD=recipesage_dev
  browserless:
    image: browserless/chrome:1.43.0-chrome-stable
    environment:
      - MAX_CONCURRENT_SESSIONS=3
      - MAX_QUEUE_LENGTH=10
      - DEFAULT_BLOCK_ADS=true
      - DEFAULT_LAUNCH_ARGS=["--disable-web-security"]
      - WORKSPACE_DELETE_EXPIRED=true
      - WORKSPACE_EXPIRE_DAYS=1
      - EXIT_ON_HEALTH_FAILURE=true
      - PREBOOT_CHROME=true
      - KEEP_ALIVE=true
      - FUNCTION_ENABLE_INCOGNITO_MODE=true
  ingredient-instruction-classifier:
    image: julianpoy/ingredient-instruction-classifier:latest


  graylog_mongodb:
    image: mongo:3
    volumes:
      - graylog_mongo_data:/data/db
  graylog_elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.5
    volumes:
      - graylog_es_data:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
  # Graylog must be configured to accept a stream
  # Select global, all others default at http://localhost:9000/system/inputs
  # System/inputs -> Inputs -> Select input -> GELF UDP -> launch new input
  graylog:
    image: graylog/graylog:3.3
    volumes:
      - graylog_journal:/usr/share/graylog/data/journal
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=YJ98Sqw2GEvY5DAb
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://localhost:9000/
    links:
      - graylog_mongodb:mongo
      - graylog_elasticsearch:elasticsearch
    depends_on:
      - graylog_mongodb
      - graylog_elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9000:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp

volumes:
  graylog_mongo_data:
    driver: local
  graylog_es_data:
    driver: local
  graylog_journal:
    driver: local
